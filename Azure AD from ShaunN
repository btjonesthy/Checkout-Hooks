$user = $args[0]
$plainpass = $args[1]
$password = ConvertTo-SecureString -string $plainpass -AsPlainText -Force
$cred = New-Object -TypeName System.Management.Automation.PSCredential -ArgumentList $user, $password
Connect-AzureAD -Credential $cred
$username = $args[2]
$roleName = $args[3]
$role = Get-AzureADDirectoryRole | Where {$_.displayName -eq $roleName}
if ($role -eq $null) {
$roleTemplate = Get-AzureADDirectoryRoleTemplate | Where {$_.displayName -eq $roleName}
Enable-AzureADDirectoryRole -RoleTemplateId $roleTemplate.ObjectId
$role = Get-AzureADDirectoryRole | Where {$_.displayName -eq $roleName}
}
Add-AzureADDirectoryRoleMember -ObjectId $role.ObjectId -RefObjectId (Get-AzureADUser | Where {$_.UserPrincipalName -eq $userName}).ObjectID
---------------------------
$user = $args[0]
$plainpass = $args[1]
$password = ConvertTo-SecureString -string $plainpass -AsPlainText -Force
$cred = New-Object -TypeName System.Management.Automation.PSCredential -ArgumentList $user, $password
Connect-AzureAD -Credential $cred
$username = $args[2]
$roleName = $args[3]
$role = Get-AzureADDirectoryRole | Where {$_.displayName -eq $roleName}
if ($role -eq $null) {
$roleTemplate = Get-AzureADDirectoryRoleTemplate | Where {$_.displayName -eq $roleName}
Enable-AzureADDirectoryRole -RoleTemplateId $roleTemplate.ObjectId
$role = Get-AzureADDirectoryRole | Where {$_.displayName -eq $roleName}
}
Remove-AzureADDirectoryRoleMember -ObjectId $role.ObjectId -Memberid (Get-AzureADUser | Where {$_.UserPrincipalName -eq $userName}).ObjectID
